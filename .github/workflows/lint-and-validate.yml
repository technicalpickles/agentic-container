name: Lint and Validate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-lint-changes:
    name: Detect Lint Changes
    runs-on: ubuntu-latest
    outputs:
      dockerfiles: ${{ steps.changes.outputs.dockerfiles }}
      yaml-files: ${{ steps.changes.outputs.yaml-files }}
      any-code: ${{ steps.changes.outputs.any-code }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: changes
        run: |
          # Get the base commit for comparison
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            # For push events, compare with previous commit
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          fi
          
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA..$HEAD_SHA)
          
          # Initialize outputs
          DOCKERFILES=false
          YAML_FILES=false
          ANY_CODE=false
          
          # Check each changed file
          while IFS= read -r file; do
            # Check for Dockerfiles
            if [[ "$file" =~ Dockerfile ]] || [[ "$file" == *.dockerfile ]]; then
              DOCKERFILES=true
              ANY_CODE=true
            fi
            
            # Check for YAML files
            if [[ "$file" == *.yml ]] || [[ "$file" == *.yaml ]]; then
              YAML_FILES=true
              ANY_CODE=true
            fi
            
            # Check if any non-docs files changed (for security scan)
            if [[ ! "$file" =~ ^docs/ ]] && [[ "$file" != "README.md" ]] && [[ ! "$file" =~ \.md$ ]]; then
              ANY_CODE=true
            fi
          done <<< "$CHANGED_FILES"
          
          echo "dockerfiles=$DOCKERFILES" >> $GITHUB_OUTPUT
          echo "yaml-files=$YAML_FILES" >> $GITHUB_OUTPUT
          echo "any-code=$ANY_CODE" >> $GITHUB_OUTPUT
          
          echo "Lint change detection:"
          echo "  dockerfiles: $DOCKERFILES"
          echo "  yaml-files: $YAML_FILES" 
          echo "  any-code: $ANY_CODE"

  hadolint:
    name: Lint Dockerfiles
    runs-on: ubuntu-latest
    needs: detect-lint-changes
    if: needs.detect-lint-changes.outputs.dockerfiles == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Lint all Dockerfiles with Hadolint
        uses: jbergstroem/hadolint-gh-action@v1.13.0
        with:
          dockerfile: '**/Dockerfile*'
          config_file: '.hadolint.yaml'
          annotate: true

  yamllint:
    name: Lint YAML files
    runs-on: ubuntu-latest
    needs: detect-lint-changes
    if: needs.detect-lint-changes.outputs.yaml-files == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3.1.1
        with:
          file_or_dir: "."
          config_file: ".yamllint"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: detect-lint-changes
    if: needs.detect-lint-changes.outputs.any-code == 'true'
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.4
        with:
          version: v0.66.0

      - name: Run Trivy security scan (Human-readable output)
        run: |
          echo "üîç Running Trivy security scan..."
          trivy config --format table --severity HIGH,CRITICAL,MEDIUM .

      - name: Run Trivy security scan (SARIF for GitHub Security)
        run: |
          trivy config --format sarif --output trivy-results.sarif .

      - name: Run Trivy security scan (Fail on HIGH/CRITICAL)
        run: |
          echo "üîç Running Trivy security scan with exit codes..."
          trivy config --exit-code 1 --severity HIGH,CRITICAL .

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
